n<template>
  <b-row class="my-1">
    <!-- First Person Input Fields -->
    <b-col sm="1">
      <label for="input-small">Name:</label>
    </b-col>
    <b-col sm="2">
      <b-form-input v-model="person1.name" id="input-small" size="sm" placeholder="Enter your name"></b-form-input>
    </b-col>
    <b-col sm="1">
      <label for="input-small">Weight:</label>
    </b-col>
    <b-col sm="2">
      <b-form-input v-model="person1.weight" type="number" id="input-small" size="sm" placeholder="Enter your weight in kg"></b-form-input>
    </b-col>
    <b-col sm="1">
      <label for="input-small">Height:</label>
    </b-col>
    <b-col sm="2">
      <b-form-input v-model="person1.height" type="number" id="input-small" size="sm" placeholder="Enter your height in cm"></b-form-input>
    </b-col>
  </b-row>

  <b-row class="my-1">
    <!-- Second Person Input Fields -->
    <b-col sm="1">
      <label for="input-small">Name:</label>
    </b-col>
    <b-col sm="2">
      <b-form-input v-model="person2.name" id="input-small" size="sm" placeholder="Enter your name"></b-form-input>
    </b-col>
    <b-col sm="1">
      <label for="input-small">Weight:</label>
    </b-col>
    <b-col sm="2">
      <b-form-input v-model="person2.weight" type="number" id="input-small" size="sm" placeholder="Enter your weight in kg"></b-form-input>
    </b-col>
    <b-col sm="1">
      <label for="input-small">Height:</label>
    </b-col>
    <b-col sm="2">
      <b-form-input v-model="person2.height" type="number" id="input-small" size="sm" placeholder="Enter your height in cm"></b-form-input>
    </b-col>
  </b-row>

  <!-- Alert for missing input or BMI comparison -->
  <b-alert v-model="showDismissibleAlert" variant="info" dismissible @dismissed="dismissAlert">
    {{ alertMessage }}
  </b-alert>

  <!-- Button to trigger BMI calculation -->
  <b-button @click="calculateBMI" variant="info" class="m-1">
    Calculate
  </b-button>

  <!-- Button to compare BMIs and show alert + card -->
  <b-button @click="compareBMI" variant="info" class="m-1">
    Compare
  </b-button>

  <!-- Card to display BMI details, shown only when comparison is triggered -->
  <b-card v-if="showDismissibleAlert && validInputs" class="my-2" header="BMI Comparison">
    <b-row>
      <b-col sm="6">
        <b-form-group label="Person 1:">
          <b-form-group label="Name:">
            <b-form-input v-model="person1.name" readonly></b-form-input>
          </b-form-group>
          <b-form-group label="BMI:">
            <b-form-input :value="bmi.bmi1.toFixed(2)" readonly></b-form-input>
          </b-form-group>
          <b-form-group label="Category:">
            <b-form-input :value="bmiCategories.category1" readonly></b-form-input>
          </b-form-group>
        </b-form-group>
      </b-col>
      <b-col sm="6">
        <b-form-group label="Person 2:">
          <b-form-group label="Name:">
            <b-form-input v-model="person2.name" readonly></b-form-input>
          </b-form-group>
          <b-form-group label="BMI:">
            <b-form-input :value="bmi.bmi2.toFixed(2)" readonly></b-form-input>
          </b-form-group>
          <b-form-group label="Category:">
            <b-form-input :value="bmiCategories.category2" readonly></b-form-input>
          </b-form-group>
        </b-form-group>
      </b-col>
    </b-row>
  </b-card>
</template>

<script>
export default {
  data() {
    return {
      showDismissibleAlert: false,
      validInputs: false,
      alertMessage: '',
      person1: {
        name: '',
        weight: null,
        height: null,
      },
      person2: {
        name: '',
        weight: null,
        height: null,
      },
    };
  },
  computed: {
    // Using the calculateBMI function to compute BMI for both users
    bmi() {
      const calculateBMI = (weight, height) =>
        weight && height ? weight / Math.pow(height / 100, 2) : 0;

      return {
        bmi1: calculateBMI(this.person1.weight, this.person1.height),
        bmi2: calculateBMI(this.person2.weight, this.person2.height),
      };
    },
    // Categorizing BMI for both persons in one method
    bmiCategories() {
      return {
        category1: this.getBMICategory(this.bmi.bmi1),
        category2: this.getBMICategory(this.bmi.bmi2),
      };
    },
  },
  methods: {
    // Validation of input fields
    validateInputs() {
      if (
        !this.person1.name ||
        !this.person1.weight ||
        !this.person1.height ||
        !this.person2.name ||
        !this.person2.weight ||
        !this.person2.height
      ) {
        this.alertMessage = 'All fields must be filled for both persons.';
        this.showDismissibleAlert = true;
        return false;
      }
      return true;
    },
    // Method to categorize BMI using a for loop
    getBMICategory(bmi) {
      const categories = [
        { max: 18.5, label: 'Underweight' },
        { max: 24.9, label: 'Normal weight' },
        { max: 29.9, label: 'Overweight' },
        { max: Infinity, label: 'Obesity' },
      ];

      for (let category of categories) {
        if (bmi < category.max) {
          return category.label;
        }
      }
    },
    calculateBMI() {
      if (!this.validateInputs()) return;
      this.validInputs = true;
    },
    compareBMI() {
      if (!this.validateInputs()) return;

      this.calculateBMI();

      if (this.bmi.bmi1 > this.bmi.bmi2) {
        this.alertMessage = `${this.person1.name} has a greater BMI of ${this.bmi.bmi1.toFixed(2)}`;
      } else if (this.bmi.bmi2 > this.bmi.bmi1) {
        this.alertMessage = `${this.person2.name} has a greater BMI of ${this.bmi.bmi2.toFixed(2)}`;
      } else {
        this.alertMessage = `${this.person1.name} and ${this.person2.name} have the same BMI of ${this.bmi.bmi1.toFixed(2)}`;
      }

      this.showDismissibleAlert = true;
    },
    dismissAlert() {
      this.showDismissibleAlert = false;

      // Reset form data
      this.person1 = {
        name: '',
        weight: null,
        height: null,
      };
      this.person2 = {
        name: '',
        weight: null,
        height: null,
      };
      
      this.validInputs = false;
    },
  },
};
</script>



----------------------
this.alertMessage = this.getBMIMessage(this.person1.name, bmi1, this.person2.name, bmi2);

  this.showDismissibleAlert = true;
},

getBMIMessage(name1, bmi1, name2, bmi2) {
  if (bmi1 > bmi2) {
    return `${name1} has a greater BMI of ${bmi1}`;
  } else if (bmi2 > bmi1) {
    return `${name2} has a greater BMI of ${bmi2}`;
  } else {
    return `${name1} and ${name2} have the same BMI of ${bmi1}`;
  }
