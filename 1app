<template>
  <div class="app">
    <div v-if="!isLoggedIn" class="d-flex align-items-center justify-content-center mt-5">
      <b-card class="w-25">
        <!-- Login Form -->
        <div v-if="showLoginForm">
          <b-card-text>
            <login-view @login-success="updateLoginStatus(true, $event)"></login-view>
          </b-card-text>

          <!-- "Don't have an account?" link to switch to SignUp -->
          <div class="mt-3">
            <span class="text-primary">
              Don't have an account?
              <span class="clickable" @click="showLoginForm = false">Sign up here</span>
            </span>
          </div>
        </div>

        <!-- SignUp Form -->
        <div v-else>
          <b-card-text>
            <sign-up></sign-up>
          </b-card-text>

          <!-- "Already have an account?" link to switch back to Login -->
          <div class="mt-3">
            <span v-if="!isLoggedIn" class="text-primary">
              Already have an account?
              <span class="clickable" @click="showLoginForm = true">Sign in here</span>
            </span>
          </div>
        </div>
      </b-card>
    </div>

    <div v-else>
      <b-navbar toggleable="lg" type="dark" variant="info">
        <b-navbar-brand href="#">NavBar</b-navbar-brand>

        <b-navbar-toggle target="nav-collapse"></b-navbar-toggle>

        <b-collapse id="nav-collapse" is-nav>
          <b-navbar-nav>
            <b-nav-item>
              <router-link to="/home" class="nav-link">Home</router-link>
            </b-nav-item>
            <b-nav-item>
              <router-link to="/other" class="nav-link">Link</router-link>
            </b-nav-item>
          </b-navbar-nav>

          <b-navbar-nav class="ml-auto">
            <b-nav-item-dropdown right>
              <template #button-content>
                <em>{{ username }}</em>
              </template>

              <b-dropdown-item :disabled="true">
                <span>{{ userEmail }}</span>
              </b-dropdown-item>
              <b-dropdown-item @click="editPassword">Change Password</b-dropdown-item>
              <b-dropdown-item @click="deleteAccount">Delete Account</b-dropdown-item>

              <b-dropdown-item @click="signOut">Sign Out</b-dropdown-item>
            </b-nav-item-dropdown>
          </b-navbar-nav>
        </b-collapse>
      </b-navbar>

      <router-view></router-view>
    </div>
  </div>
</template>

<script>
import LoginView from './views/LoginView.vue'
import SignUp from './views/SignUp.vue'

export default {
  components: { LoginView, SignUp },
  data() {
    return {
      isLoggedIn: false,
      showLoginForm: true,
      username: '',
    }
  },

  methods: {
    updateLoginStatus(status, username) {
      this.isLoggedIn = status
      if (username) {
        this.username = username
        this.fetchUserEmail()
      }
    },
    fetchUserEmail() {
      // Retrieve the current user's data from localStorage
      const user = JSON.parse(localStorage.getItem(this.username))
      if (user) {
        this.userEmail = user.email || '' // Set the user's email
      }
    },
    deleteAccount() {
      if (confirm('Are you sure you want to delete your account?')) {
        localStorage.removeItem(this.username)
        this.isLoggedIn = false
      }
    },
    signOut() {
      this.isLoggedIn = false
    },
    editPassword() {
      const user = JSON.parse(localStorage.getItem(this.username))

      if (user) {
        const email = prompt('Enter your email address:')
        if (email === user.email) {
          const newPassword = prompt('Enter new password:')
          if (newPassword) {
            user.password = newPassword
            localStorage.setItem(this.username, JSON.stringify(user))
            alert('Password updated successfully!')
          } else {
            alert('Password update failed. Please try again.')
          }
        } else {
          alert('Email does not match the registered email.')
        }
      } else {
        alert('User not found!')
      }
    },
  },
  created() {
    const user = localStorage.getItem('userAccount')
    if (user) {
      this.isLoggedIn = true
      this.username = JSON.parse(user).username
      this.fetchUserEmail() // Set the email when user is logged in
    }
  },
}
</script>

<style scoped>
.clickable {
  cursor: pointer; /* Ensure the cursor is a pointer on hover */
  text-decoration: underline;
  color: #007bff; /* Blue color for the clickable text */
  display: inline-block;
}
.clickable:hover {
  color: #0056b3;
}
</style>


-----------------
{ path: '/login', name: 'login', component: LoginView },
  { path: '/register', name: 'register', component: SignUp },
